<UserControl x:Class="SolutionBook.ToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SolutionBook"
             
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:images="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"

             Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
             Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}"

             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="800">

    <UserControl.Resources>

        <!-- tree item style -->
        <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="Margin" Value="1 2 1 2" />
        </Style>

        <!-- context menu style = switcher -->
        <Style x:Key="ContextMenuSwitcher" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static local:BookItemType.Solution}">
                    <Setter Property="ContextMenu" Value="{DynamicResource SolutionContextMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static local:BookItemType.Folder}">
                    <Setter Property="ContextMenu" Value="{DynamicResource FolderContextMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static local:BookItemType.Recents}">
                    <Setter Property="ContextMenu" Value="{DynamicResource RecentsContextMenu}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="{x:Static local:BookItemType.Recent}">
                    <Setter Property="ContextMenu" Value="{DynamicResource RecentContextMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border BorderThickness="1" CornerRadius="4" BorderBrush="Black" x:Name="Border" Padding="1" 
                                Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" 
                                        Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
            <Setter Property="Margin" Value="0 2 0 2" />
        </Style>

        <ContextMenu x:Key="SolutionContextMenu" Style="{DynamicResource ContextMenuStyle}"
                     Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                     Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}">

            <MenuItem Header="Open" Click="Menu_Open" Style="{DynamicResource MenuItemStyle}" IsEnabled="{Binding Path=(local:OpenEnabler.IsEnabled)}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Open}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Rename" Click="Menu_Rename" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon >
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Rename}" />
                </MenuItem.Icon>
            </MenuItem>
            <!--
            <MenuItem Header="Properties" Click="Menu_Properties" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Property}" />
                </MenuItem.Icon>
            </MenuItem>
            -->
            <Separator />
            <MenuItem Header="Remove" Click="Menu_RemoveSolution" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Cancel}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="FolderContextMenu" Style="{DynamicResource ContextMenuStyle}"
                     Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                     Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}">

            <MenuItem Header="Rename" Click="Menu_Rename" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon >
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Rename}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Add Folder" Click="Menu_AddFolder" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.AddFolder}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Add Solution" Click="Menu_AddSolution" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.AddScreen}" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="Remove" Click="Menu_RemoveFolder" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Cancel}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="RecentsContextMenu" Style="{DynamicResource ContextMenuStyle}"
                     Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                     Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}">

            <MenuItem Header="Refresh" Click="Menu_Refresh" Style="{DynamicResource MenuItemStyle}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Refresh}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="RecentContextMenu" Style="{DynamicResource ContextMenuStyle}"
                     Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                     Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}">

            <MenuItem Header="Open" Click="Menu_Open" Style="{DynamicResource MenuItemStyle}" IsEnabled="{Binding Path=(local:OpenEnabler.IsEnabled)}">
                <MenuItem.Icon>
                    <imaging:CrispImage Moniker="{x:Static images:KnownMonikers.Open}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

    </UserControl.Resources>

    <Grid>
        <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <TreeView Height="Auto" Name="Book" VerticalAlignment="Stretch" DockPanel.Dock="Top" 
                      TreeViewItem.Expanded="BookItem_Expanded" TreeViewItem.Collapsed="BookItem_Collapsed"
                      Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                      Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}" 
                      BorderThickness="0"
                      ItemContainerStyle="{StaticResource TreeViewItemStyle}"                      
                      PreviewMouseLeftButtonDown="Book_PreviewMouseLeftDown"
                      PreviewMouseRightButtonDown="Book_PreviewMouseRightDown"
                      KeyUp="Book_KeyUp">

                <TreeView.Resources>

                    <!-- Style the inactive selection the same as active -->
                    <SolidColorBrush 
                        x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                        Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
                    <SolidColorBrush 
                        x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                        Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>

                    <!-- View template -->
                    <DataTemplate x:Key="ViewTemplate">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource ContextMenuSwitcher}">
                            <imaging:CrispImage Moniker="{Binding Icon}" Height="16" Width="16" Margin="0 0 4 0"/>
                            <TextBlock Text="{Binding Header}" FontWeight="{Binding Weight}"
                                       Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}" />
                        </StackPanel>
                    </DataTemplate>

                    <!-- Edit template -->
                    <DataTemplate x:Key="EditTemplate">
                        <StackPanel Orientation="Horizontal" Style="{StaticResource ContextMenuSwitcher}">
                            <imaging:CrispImage Moniker="{Binding Icon}" Height="16" Width="16" Margin="0 0 4 0"/>
                            <TextBox Text="{Binding Header}" FontWeight="{Binding Weight}"
                                     Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}"
                                     Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                                     Loaded="TextBox_Loaded"
                                     LostFocus="TextBox_LostFocus" KeyUp="TextBox_KeyUp"  />
                        </StackPanel>
                    </DataTemplate>

                    <!-- Presenter style = template selector -->
                    <Style x:Key="PresenterStyle" TargetType="{x:Type ContentPresenter}">
                        <Setter Property="ContentTemplate" Value="{StaticResource ViewTemplate}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </TreeView.Resources>

                <!-- tree template -->
                <TreeView.ItemTemplate >
                    <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                        <ContentPresenter Content="{Binding}" Style="{StaticResource PresenterStyle}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

            </TreeView>

        </DockPanel>
    </Grid>
</UserControl>
